name: "Deploy Prod"

on:
  push:
    branches: [master]

jobs:
  build-backend:
    name: "Build Backend"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.SKOLE_PAT }}

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@0d135e0c2fc0dba0729c1a47ecfcf5a3c7f8579e  # v1.3.0

      - name: "Set up Docker layer caching"
        uses: ruohola/cache@main
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-backend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend-

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@cefc5912bc61e2b5a3b049c839fc283c7712d4e0  # v1.5.8
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: "Login to ECR"
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2  # v1.3.3

      - name: "Build, tag, cache, and push the image to ECR"
        uses: docker/build-push-action@e1b7f96249f2e4c8e4ac1519b9608c0d48944a1f  # v2.4.0
        with:
          context: backend
          push: true
          tags: ${{ secrets.AWS_ECR_ACCOUNT_URL }}/backend-prod:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: "Move cache"
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: "Notify Slack"
        if: failure()
        uses: rtCamp/action-slack-notify@f565a63638bd3615e76249bffab00fcb9dab90f7  # v2.1.3
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: 'danger'

  build-frontend:
    name: "Build Frontend"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.SKOLE_PAT }}

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@0d135e0c2fc0dba0729c1a47ecfcf5a3c7f8579e  # v1.3.0

      - name: "Set up Docker layer caching"
        uses: ruohola/cache@main
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-frontend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-frontend-

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@cefc5912bc61e2b5a3b049c839fc283c7712d4e0  # v1.5.8
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: "Login to ECR"
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2  # v1.3.3

      - name: "Build, tag, cache, and push the image to ECR"
        uses: docker/build-push-action@e1b7f96249f2e4c8e4ac1519b9608c0d48944a1f  # v2.4.0
        with:
          context: frontend
          build-args: |
            API_URL=https://api.skoleapp.com
            FRONTEND_URL=https://www.skoleapp.com
            SA_URL=https://sa.skoleapp.com
            EMAIL_ADDRESS=hello@skoleapp.com
          push: true
          tags: ${{ secrets.AWS_ECR_ACCOUNT_URL }}/frontend-prod:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: "Move cache"
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: "Notify Slack"
        if: failure()
        uses: rtCamp/action-slack-notify@f565a63638bd3615e76249bffab00fcb9dab90f7  # v2.1.3
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: 'danger'

  deploy-prod:
    name: "Deploy Prod"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    needs: [build-backend, build-frontend]
    steps:
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@cefc5912bc61e2b5a3b049c839fc283c7712d4e0  # v1.5.8
        with:
          aws-region: eu-central-1

      - name: "Download task definition"
        run: >
          aws ecs describe-task-definition --task-definition skole-prod-task --query taskDefinition > task-definition.json

      - name: "Update backend tag to task definition"
        id: backend-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c8223377f0fe5ff2b08ca8888edbc875c2e91160  # v1.0.20
        with:
          task-definition: task-definition.json
          container-name: backend_prod
          image: ${{ secrets.AWS_ECR_ACCOUNT_URL }}/backend-prod:${{ github.sha }}

      - name: "Update frontend tag to task definition"
        id: frontend-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c8223377f0fe5ff2b08ca8888edbc875c2e91160  # v1.0.20
        with:
          task-definition: ${{ steps.backend-task-def.outputs.task-definition }}
          container-name: frontend_prod
          image: ${{ secrets.AWS_ECR_ACCOUNT_URL }}/frontend-prod:${{ github.sha }}

      - name: "Deploy the task definition"
        uses: aws-actions/amazon-ecs-deploy-task-definition@f25cba814d2a2e7110ffd972010247dfd6f191dd  # v1.4.4
        with:
          task-definition: ${{ steps.frontend-task-def.outputs.task-definition }}
          service: skole-prod-service
          cluster: skole-prod-cluster
          wait-for-service-stability: true

      - name: "Notify Slack"
        if: always()
        uses: rtCamp/action-slack-notify@f565a63638bd3615e76249bffab00fcb9dab90f7  # v2.1.3
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
