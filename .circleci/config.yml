version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.7.1
  aws-ecs: circleci/aws-ecs@1.1.0


prod-branch: &prod-branch
  filters:
    branches:
      only:
        - deploy

staging-branch: &staging-branch
  filters:
    branches:
      only:
        - doesnotmatchanybranch


commands:
  update-submodules:
    steps:
      - checkout
      - run:
          name: "Update submodules"
          command: git submodule update --init --recursive


jobs:
  test-backend:
    machine:
      image: ubuntu-1604:201903-01 
    steps:
      - update-submodules
      - run:
          name: "Run type-check and tests"
          command: >
            cd backend &&
            docker-compose -f docker-compose.circleci.yml
            run --rm backend sh -c "mypy . && pytest tests"

  test-frontend:
    machine:
      image: ubuntu-1604:201903-01 
    steps:
      - update-submodules
      - run:
          name: "Run type-check and linting"
          command: >
            cd frontend &&
            docker-compose -f docker-compose.circleci.yml
            run --rm frontend sh -c "yarn type-check && yarn lint"


workflows:
  deploy:
    jobs:
      - test-backend:
          <<: *prod-branch
      - test-frontend:
          <<: *prod-branch

      - aws-ecr/build-and-push-image: &build-image
          name: build-backend
          pre-steps:
            - update-submodules
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          dockerfile: ./backend/Dockerfile.prod
          region: AWS_REGION
          repo: backend
          tag: "${CIRCLE_SHA1}"
          <<: [ *prod-branch, *staging-branch ]

      - aws-ecr/build-and-push-image:
          name: build-frontend
          dockerfile: ./frontend/Dockerfile.prod
          repo: frontend
          <<: *build-image

      - aws-ecs/update-task-definition-from-json:
          name: update-prod-task-definition
          requires:
            - test-backend
            - test-frontend
            - build-backend
            - build-frontend
          pre-steps:
            - checkout
          task-definition-json: task-definition.json
          <<: *prod-branch

      - aws-ecs/update-task-definition-from-json:
          name: update-staging-task-definition
          requires:
            - build-backend
            - build-frontend
          pre-steps:
            - checkout
          task-definition-json: task-definition-staging.json
          <<: *staging-branch

      - aws-ecs/deploy-service-update: &update-service
          name: update-prod-service
          requires:
            - update-prod-task-definition
          aws-region: AWS_DEFAULT_REGION
          cluster-name: skole-cluster
          service-name: skole-service
          family: skole-task
          container-image-name-updates: "container=backend,tag=${CIRCLE_SHA1},container=frontend,tag=${CIRCLE_SHA1}"
          <<: *prod-branch

      - aws-ecs/deploy-service-update:
          name: update-staging-service
          requires:
            - update-staging-task-definition
          cluster-name: skole-staging-cluster
          service-name: skole-staging-service
          family: skole-staging-task
          <<: *update-service
          <<: *staging-branch
